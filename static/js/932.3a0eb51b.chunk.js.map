{"version":3,"file":"static/js/932.3a0eb51b.chunk.js","mappings":"4QAEaA,EAAaC,EAAAA,EAAAA,IAAH,mQAcVC,EAAiBD,EAAAA,EAAAA,IAAH,0CAIdE,EAAYF,EAAAA,EAAAA,GAAH,oJASTG,EAAaH,EAAAA,EAAAA,GAAH,uEAIVI,EAAeJ,EAAAA,EAAAA,GAAH,uEAKZK,EAAmBL,EAAAA,EAAAA,GAAH,iEAIhBM,EAAaN,EAAAA,EAAAA,GAAH,uEAKVO,EAAaP,EAAAA,EAAAA,OAAH,ikBAyDVQ,GA5BYR,EAAAA,EAAAA,OAAH,6iBA4BQA,EAAAA,EAAAA,GAAH,wGAOdS,EAAiBT,EAAAA,EAAAA,GAAH,+G,SC7FdU,EAAU,WAAO,IAAD,IACnBC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAU7C,IARAC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,IAAoBV,GACjBW,KAAKP,GACLQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,CAACb,IAECG,EAAL,CAIA,IAAQa,EAAuDb,EAAvDa,YAAaC,EAA0Cd,EAA1Cc,MAAOC,EAAmCf,EAAnCe,SAAUC,EAAyBhB,EAAzBgB,aAAcC,EAAWjB,EAAXiB,OAEpD,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIhB,EAAV,UACE,SAACT,EAAD,0BAGF,UAACR,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAY0B,KACZ,gBACEK,IAAG,yCAAoCN,GACvCO,IAAKN,EACLO,MAAO,IACPC,OAAQ,UAIZ,UAACnC,EAAD,YACE,SAACE,EAAD,wBACA,SAACC,EAAD,UAAeyB,KACf,UAAC1B,EAAD,0BAAyB2B,EAAzB,UACA,4BACE,SAAC3B,EAAD,qBACC4B,IACC,SAAC1B,EAAD,UACG0B,EAAOM,KAAI,SAACC,EAAOC,GAClB,OACE,SAAClC,EAAD,WACE,SAACC,EAAD,UAAagC,EAAME,QADED,EAI1B,gBAOX,UAACxC,EAAD,YACE,SAACS,EAAD,sCACA,SAACC,EAAD,WACE,SAAC,KAAD,CAASuB,GAAG,OAAZ,qBAEF,SAACvB,EAAD,WACE,SAAC,KAAD,CAASuB,GAAG,UAAZ,2BAGJ,SAAC,KAAD,MAnDH,CAsDF,C","sources":["components/details/DetailStyled.jsx","components/details/Details.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardMovies = styled.div`\n  position: relative;\n  display: flex;\n  width: 1000px;\n  margin: auto;\n  text-align: center;\n  align-items: center;\n  border-radius: 2px;\n  // top: 50%;\n  // left: 50%;\n  box-shadow: 0 0 2rem #000;\n  // position: absolute;\n`;\n\nexport const CardMoviesItem = styled.div`\n  padding: 20px;\n`;\n\nexport const TextTitle = styled.h1`\n  text-align: center;\n  margin: 0;\n  color: #c5dbe7;\n  margin-bottom: 10px;\n\n  font-size: 40px;\n  font-weight: bold;\n`;\nexport const TextMovies = styled.h2`\n  color: #c5dbe7;\n  font-family: Montserrat;\n`;\nexport const TextOverview = styled.h3`\n  line-height: 1.5em;\n  text-align: justify;\n`;\n\nexport const MoviesGenresList = styled.ul`\n  text-decoration: none;\n  padding: 0;\n`;\nexport const TextGenres = styled.h3`\n  text-align: justify;\n  text-align: center;\n`;\n\nexport const ButtonBack = styled.button`\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n\n  margin-left: auto;\n  margin-left: 20px;\n  padding: 10px 20px;\n  border: 0;\n\n  color: #e4c9c9;\n  background-color: darkred;\n  border-radius: 5px;\n\n  font-family: inherit;\n  font-size: 22px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #531919;\n  }\n`;\n\nexport const ButtonNav = styled.button`\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n\n  margin-left: auto;\n  margin-right: 20px;\n  padding: 10px 20px;\n  border: 0;\n\n  color: #e4c9c9;\n  background-color: darkred;\n  border-radius: 5px;\n\n  font-family: inherit;\n  font-size: 10px;\n  line-height: 15px;\n  font-style: normal;\n  min-width: 180px;\n\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #531919;\n  }\n`;\n\nexport const TextMoviesInfo = styled.h3`\n  color: #c5dbe7;\n  font-family: Montserrat;\n  padding: 20px;\n  margin: 0;\n`;\n\nexport const CardMoviesInfo = styled.h3`\n  display: block;\n  margin-right: 20px;\n  text-decoration: none;\n  color: #c5dbe7;\n`;\n","import { useEffect, useState } from 'react';\nimport { searchMoviesDetails } from 'components/fetch/Fetch';\nimport { useParams, Link, useLocation, NavLink } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport {\n  CardMovies,\n  TextTitle,\n  ButtonBack,\n  TextMovies,\n  TextOverview,\n  CardMoviesItem,\n  MoviesGenresList,\n  TextGenres,\n  TextMoviesInfo,\n  CardMoviesInfo,\n} from './DetailStyled';\n\nexport const Details = () => {\n  const { movieId } = useParams();\n  // const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    // setLoading(true);\n    searchMoviesDetails(movieId)\n      .then(setMovies)\n      .catch(error => console.log(error));\n    // .finally(setLoading(false));\n  }, [movieId]);\n\n  if (!movies) {\n    return;\n  }\n\n  const { poster_path, title, overview, vote_average, genres } = movies;\n\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        <ButtonBack> Go back</ButtonBack>\n      </Link>\n\n      <CardMovies>\n        <CardMoviesItem>\n          <TextTitle>{title}</TextTitle>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            width={290}\n            height={350}\n          />\n        </CardMoviesItem>\n\n        <CardMoviesItem>\n          <TextMovies>Overview</TextMovies>\n          <TextOverview>{overview}</TextOverview>\n          <TextMovies>User score: {vote_average}/10</TextMovies>\n          <div>\n            <TextMovies>Genres</TextMovies>\n            {genres && (\n              <MoviesGenresList>\n                {genres.map((genre, id) => {\n                  return (\n                    <MoviesGenresList key={id}>\n                      <TextGenres>{genre.name}</TextGenres>\n                    </MoviesGenresList>\n                  );\n                })}\n              </MoviesGenresList>\n            )}\n          </div>\n        </CardMoviesItem>\n      </CardMovies>\n\n      <CardMovies>\n        <TextMoviesInfo>Additional information</TextMoviesInfo>\n        <CardMoviesInfo>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </CardMoviesInfo>\n        <CardMoviesInfo>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </CardMoviesInfo>\n      </CardMovies>\n      <Outlet />\n    </div>\n  );\n};\n"],"names":["CardMovies","styled","CardMoviesItem","TextTitle","TextMovies","TextOverview","MoviesGenresList","TextGenres","ButtonBack","TextMoviesInfo","CardMoviesInfo","Details","movieId","useParams","useState","movies","setMovies","backLinkHref","useLocation","state","from","useEffect","searchMoviesDetails","then","catch","error","console","log","poster_path","title","overview","vote_average","genres","to","src","alt","width","height","map","genre","id","name"],"sourceRoot":""}